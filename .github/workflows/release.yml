name: Release

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - release
  # Also allow manual triggering for releases
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build for Multiple Platforms
        run: |
          mkdir -p releases
          
          # Build for different platforms
          PLATFORMS=("windows/amd64" "linux/amd64" "linux/arm64" "darwin/amd64" "darwin/arm64")
          for platform in "${PLATFORMS[@]}"; do
            OS=${platform%/*}
            ARCH=${platform#*/}
            output_name="releases/octoload-${OS}-${ARCH}"
            if [ $OS = "windows" ]; then
              output_name="$output_name.exe"
            fi
            echo "Building for $OS/$ARCH..."
            GOOS=$OS GOARCH=$ARCH go build -ldflags="-s -w" -o "$output_name" .
          done
          
          # Make binaries executable
          chmod +x releases/*

      - name: Generate Next Version
        id: semver
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true

      - name: Check if release already exists
        id: check_release
        run: |
          VERSION="${{ steps.semver.outputs.new_tag }}"
          if gh release view "$VERSION" >/dev/null 2>&1; then
            echo "Release $VERSION already exists, skipping..."
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug file listing
        run: ls -R releases

      - name: Create Release
        if: steps.check_release.outputs.skip == 'false' && steps.semver.outputs.new_tag != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.semver.outputs.new_tag }}
          name: "Octoload ${{ steps.semver.outputs.new_tag }}"
          body: |
            ## What's Changed
            
            ${{ steps.semver.outputs.changelog }}
            
            ## Downloads
            
            Download the appropriate binary for your platform:
            - **Linux (x64)**: octoload-linux-amd64
            - **Linux (ARM64)**: octoload-linux-arm64
            - **Windows (x64)**: octoload-windows-amd64.exe
            - **macOS (Intel)**: octoload-darwin-amd64
            - **macOS (Apple Silicon)**: octoload-darwin-arm64
          files: releases/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
